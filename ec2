#!/usr/bin/env bash

debug() {
    if ((DEBUG)); then
       echo "===> [${FUNCNAME[1]}] $*" 1>&2
    fi
}

list-target-groups() {
  aws elbv2 describe-target-groups \
    --query "TargetGroups[].${ATTR:-TargetGroupName}" \
    --out ${OUT:-table}
}

delete-target-groups() {

  for next in $(OUT=text ATTR=TargetGroupArn ./ec2 ::list-target-groups); do
    debug deleting TargetGroup: ${next} ...
    ${DRY:+echo [dry-run] } aws elbv2 delete-target-group \
      --target-group-arn ${next}
  done
}

list-images() {
  aws ec2 describe-images \
    --owners self \
    --query "Images[].${ATTR:-Name}" \
    --out ${OUT:-table}
}

delete-images() {
  for next in $(OUT=text ATTR=ImageId list-images); do
    debug deleting Images: ${next} ...
    ${DRY:+echo [dry-run] } aws ec2 deregister-image \
      --image-id ${next}
  done
}

list-snapshots() {
  aws ec2 describe-snapshots \
    --owner-ids self \
    --query "Snapshots[].${ATTR:-SnapshotId}" \
    --out ${OUT:-table}
}

delete-snapshots() {
  for next in $(OUT=text ATTR=SnapshotId list-snapshots); do
    debug deleting Snapshots: ${next} ...
    ${DRY:+echo [dry-run] } aws ec2 delete-snapshot \
      --snapshot-id ${next}
  done
}

list-lbs() {
  aws elbv2 describe-load-balancers \
    --query "LoadBalancers[].${ATTR:-LoadBalancerName}" \
    --out ${OUT:-table}
}

delete-lbs() {
  for next in $(OUT=text ATTR=LoadBalancerArn list-lbs); do
    debug deleting LoadBalancer: ${next} ...
    ${DRY:+echo [dry-run] } aws elbv2 delete-load-balancer \
      --load-balancer-arn ${next}
  done
}

list-commands() {
  echo "available commands:"
  sed -n 's/\(.*\)().*/  ::\1/p' ${BASH_SOURCE} \
   | grep -v 'main\|debug\|sed' \
   | sort
}

create-coffe-stack() {
  ${DRY:+echo [dry-run] } aws cloudformation create-stack \
    --stack-name coffe-$(date +%M) \
    --template-url https://lalyos-cf.s3.eu-central-1.amazonaws.com/cf-coffe-break.yaml \
    --parameters \
        ParameterKey=KeyName,ParameterValue=$(aws ec2 describe-key-pairs --query "KeyPairs[0].KeyName" --out text) \
        ParameterKey=EIPAllocId,ParameterValue=$(aws ec2 describe-addresses --query Addresses[0].AllocationId --out text) \
        ParameterKey=Color,ParameterValue=brown \
        ParameterKey=BreakTime,ParameterValue=$(date +%H:%M --date='10 minutes')
}

prune() {
  delete-lbs
  delete-target-groups
  delete-images
  delete-snapshots
}

main() {
  # if last arg is -d sets DEBUG
  [[ ${@:$#} =~ -d ]] && { set -- "${@:1:$(($#-1))}" ; DEBUG=1 ; } || :

  if [[ $1 =~ :: ]]; then
    debug DIRECT-COMMAND  ...
    command=${1#::}
    shift
    $command "$@"
  else
    debug default-command
    list-commands
  fi
}

alias r=". $BASH_SOURCE"
[[ "$0" == "$BASH_SOURCE" ]] && main "$@" || true
